/**
 * PayPal Server SDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
import { lazy, object, optional } from '../schema';
import { applePayPaymentObjectSchema, } from './applePayPaymentObject';
import { bancontactPaymentObjectSchema, } from './bancontactPaymentObject';
import { blikPaymentObjectSchema, } from './blikPaymentObject';
import { cardResponseSchema } from './cardResponse';
import { epsPaymentObjectSchema } from './epsPaymentObject';
import { giropayPaymentObjectSchema, } from './giropayPaymentObject';
import { googlePayWalletResponseSchema, } from './googlePayWalletResponse';
import { idealPaymentObjectSchema, } from './idealPaymentObject';
import { mybankPaymentObjectSchema, } from './mybankPaymentObject';
import { p24PaymentObjectSchema } from './p24PaymentObject';
import { paypalWalletResponseSchema, } from './paypalWalletResponse';
import { sofortPaymentObjectSchema, } from './sofortPaymentObject';
import { trustlyPaymentObjectSchema, } from './trustlyPaymentObject';
import { venmoWalletResponseSchema, } from './venmoWalletResponse';
export const paymentSourceResponseSchema = object({
    card: ['card', optional(lazy(() => cardResponseSchema))],
    paypal: ['paypal', optional(lazy(() => paypalWalletResponseSchema))],
    bancontact: [
        'bancontact',
        optional(lazy(() => bancontactPaymentObjectSchema)),
    ],
    blik: ['blik', optional(lazy(() => blikPaymentObjectSchema))],
    eps: ['eps', optional(lazy(() => epsPaymentObjectSchema))],
    giropay: ['giropay', optional(lazy(() => giropayPaymentObjectSchema))],
    ideal: ['ideal', optional(lazy(() => idealPaymentObjectSchema))],
    mybank: ['mybank', optional(lazy(() => mybankPaymentObjectSchema))],
    p24: ['p24', optional(lazy(() => p24PaymentObjectSchema))],
    sofort: ['sofort', optional(lazy(() => sofortPaymentObjectSchema))],
    trustly: ['trustly', optional(lazy(() => trustlyPaymentObjectSchema))],
    applePay: ['apple_pay', optional(lazy(() => applePayPaymentObjectSchema))],
    googlePay: [
        'google_pay',
        optional(lazy(() => googlePayWalletResponseSchema)),
    ],
    venmo: ['venmo', optional(lazy(() => venmoWalletResponseSchema))],
});
//# sourceMappingURL=paymentSourceResponse.js.map