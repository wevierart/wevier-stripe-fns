/**
 * PayPal Server SDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
import { Schema } from '../schema';
import { CheckoutPaymentIntent } from './checkoutPaymentIntent';
import { LinkDescription } from './linkDescription';
import { OrderAuthorizeResponsePaymentSource } from './orderAuthorizeResponsePaymentSource';
import { OrderStatus } from './orderStatus';
import { Payer } from './payer';
import { PurchaseUnit } from './purchaseUnit';
export interface OrderAuthorizeResponse {
    /** The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional. Note: The regular expression provides guidance but does not reject all invalid dates. */
    createTime?: string;
    /** The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional. Note: The regular expression provides guidance but does not reject all invalid dates. */
    updateTime?: string;
    /** The ID of the order. */
    id?: string;
    /** The payment source used to fund the payment. */
    paymentSource?: OrderAuthorizeResponsePaymentSource;
    /** The intent to either capture payment immediately or authorize a payment for an order after order creation. */
    intent?: CheckoutPaymentIntent;
    payer?: Payer;
    /** An array of purchase units. Each purchase unit establishes a contract between a customer and merchant. Each purchase unit represents either a full or partial order that the customer intends to purchase from the merchant. */
    purchaseUnits?: PurchaseUnit[];
    /** The order status. */
    status?: OrderStatus;
    /** An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links) that are either relevant to the issue by providing additional information or offering potential resolutions. */
    links?: LinkDescription[];
}
export declare const orderAuthorizeResponseSchema: Schema<OrderAuthorizeResponse>;
//# sourceMappingURL=orderAuthorizeResponse.d.ts.map